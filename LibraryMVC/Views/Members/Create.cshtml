@model LibraryMVC.Models.Member

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Member</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birth, new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
                @Html.ValidationMessageFor(model => model.Birth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                {
                     new SelectListItem { Text = "Male", Value = "Male" },
                     new SelectListItem { Text = "Female", Value = "Female" }
                 }, "Select Gender", new { @class = "form-control px-3" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegistrationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegistrationDate, new { htmlAttributes = new { @class = "form-control", @type = "Date", @id = "RegistrationDate" } })
                @Html.ValidationMessageFor(model => model.RegistrationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpireDate, new { htmlAttributes = new { @class = "form-control", @type = "Date", @id = "ExpireDate" } })
                @Html.ValidationMessageFor(model => model.ExpireDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MemberTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MemberTypeId, (IEnumerable<SelectListItem>)ViewBag.MemberTypes, "Select Type Of Member", new { @class = "form-control", @id = "MemberTypeId" })
                @*@Html.EditorFor(model => model.MemberTypeId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.MemberTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="row mx-1">
                <div class="col-md-7">
                    @Html.HiddenFor(model => model.Total, new { @id = "Total" })
                    <input type="text" id="TotalFormatted" class="form-control" readonly />
                    @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                </div>
                <p id="Fee" class="control-label col-md-2 pt-3" style="margin-left: 10px;"></p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Active", Value = "1" },
                        new SelectListItem { Text = "Inactive", Value = "0" }
                    }, "Select Status", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            function calculateTotal() {
                var registrationDate = new Date($('#RegistrationDate').val());
                var expireDate = new Date($('#ExpireDate').val());
                var memberTypeId = $('#MemberTypeId').val();

                if (registrationDate && expireDate && memberTypeId) {
                    $.ajax({
                        url: '@Url.Action("GetMemberTypeFee", "Members")',
                        data: { memberTypeId: memberTypeId },
                        success: function (result) {
                            if (result.success) {
                                var fee = result.fee;
                                var months = (expireDate.getFullYear() - registrationDate.getFullYear()) * 12 + expireDate.getMonth() - registrationDate.getMonth();
                                months = Math.max(0, months); // Ensure no negative months
                                var total = months * fee;
                                $('#Total').val(total);
                                $('#TotalFormatted').val(formatCurrency(total));
                                $('#Fee').text(formatCurrency(fee)+"/month");
                            } else {
                                alert(result.message);
                            }
                        }
                    });
                }
            }
            function formatCurrency(number) {
                return number.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
            }

            $('#RegistrationDate, #ExpireDate, #MemberTypeId').change(calculateTotal);
        });
    </script>
}
